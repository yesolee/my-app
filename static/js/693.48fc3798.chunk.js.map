{"version":3,"file":"static/js/693.48fc3798.chunk.js","mappings":"qUAuCA,EAnC2BA,EAAAA,YAAiB,WAWzCC,GAAQ,IAVTC,EAUS,EAVTA,SACAC,EASS,EATTA,UACAC,EAQS,EARTA,QACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,WACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,WACGC,GACM,YACHC,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAP,YAA4BH,GAAWD,GAAQ,GAAJ,OAAOI,EAAP,YAA4BJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAP,YAAoCP,GAAY,GAAJ,OAAOO,EAAP,aAAqCN,GAAc,GAAJ,OAAOM,EAAP,eAAuCL,GAAS,GAAJ,OAAOK,EAAP,WAEvRI,GAAqBC,EAAAA,EAAAA,KAAK,SAAD,QAAC,UAAcN,GAAf,IAC7BR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAN,eAMnB,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAN,YAAyBR,KAGtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,GAEb,CAED,OAAOA,CACR,I,8BCpBO,IAAII,MAAM,KAAOC,KAAK,GAMf,SAASC,IACtB,IAAIC,GAAQC,EAAAA,EAAAA,KAAY,SAACD,GAAD,OAAWA,CAAX,IACpBE,GAAWC,EAAAA,EAAAA,MACf,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eACA,GADA,WACsBA,EAAAA,EAAAA,UAAS,KAA/B,eAAKC,EAAL,KACA,GADA,MACmCC,EAAAA,EAAAA,kBAAnC,0BACaC,EAAAA,EAAAA,kBAAiBF,GAW9B,OACE,4BAwCE,mBACEG,QAAS,WACPN,GAASO,EAAAA,EAAAA,MACV,EACDC,MAAO,CAAEC,SAAU,WAAYC,IAAK,QAASC,MAAO,QAJtD,6CAQA,UAAC,EAAD,CAAOhC,SAAO,EAACC,UAAQ,EAACE,OAAK,EAA7B,WACE,4BACE,2BACE,gCACA,gDACA,0CACA,2DAGJ,2BACGgB,EAAMc,KAAKC,KAAI,SAACC,EAAMC,GAAP,OACd,2BACE,wBAAKD,EAAKE,MACV,wBAAKF,EAAKX,QACV,2BACE,mBACEK,MAAO,CAAES,YAAa,QACtBX,QAAS,WACPN,GAASkB,EAAAA,EAAAA,IAASJ,EAAKE,IACxB,EAJH,eAQCF,EAAKK,OACN,mBACEX,MAAO,CAAEY,WAAY,QACrBd,QAAS,WACPN,GAASqB,EAAAA,EAAAA,IAASP,EAAKE,IACxB,EAJH,mBASF,yBACE,cACER,MAAO,CAAEc,aAAc,OACvBhB,QAAS,WACPiB,OAAOC,QAAQ,sDACbxB,GAASyB,EAAAA,EAAAA,IAAWX,EAAKE,IAC5B,EALH,wBAvBKD,EADK,WAwCzB,C","sources":["../node_modules/react-bootstrap/esm/Table.js","pages/Cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import { Table } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeAge } from './../store/userSlice.js';\r\nimport { increase, decrease, sort, deleteCart } from './../store/cartSlice.js';\r\nimport {\r\n  memo,\r\n  useDeferredValue,\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n  useTransition,\r\n} from 'react';\r\n\r\nlet Child = memo(function () {\r\n  console.log('재랜더링');\r\n  return <div>자식임</div>;\r\n});\r\n\r\nlet a = new Array(10000).fill(0);\r\n\r\n// function 함수() {\r\n//   return 반복문 10억번 돌린 결과\r\n// }\r\n\r\nexport default function Cart() {\r\n  let state = useSelector((state) => state);\r\n  let dispatch = useDispatch();\r\n  let [count, setCount] = useState(0);\r\n  let [name, setName] = useState('');\r\n  let [isPending, startTransition] = useTransition();\r\n  let state1 = useDeferredValue(name);\r\n  // let result = useMemo(()=>{return 함수()},[state])\r\n  // let [num, setNum] = useState(0);\r\n  // let [age, setAge] = useState(20);\r\n\r\n  // useEffect(() => {\r\n  //   if ((num > 0) & (num < 3)) {\r\n  //     setAge(age + 1);\r\n  //   }\r\n  // }, [num]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>안녕하십니까 전 {age} </div>\r\n      <button\r\n        onClick={() => {\r\n          setNum(num + 1);\r\n        }}\r\n      >\r\n        누르면 한 살 먹기\r\n      </button> */}\r\n      {/* <Child count={count} />\r\n      <button\r\n        onClick={() => {\r\n          setCount(count + 1);\r\n        }}\r\n      >\r\n        +\r\n      </button>\r\n      <input\r\n        onChange={(e) => {\r\n          startTransition(() => {\r\n            setName(e.target.value);\r\n          });\r\n        }}\r\n      /> */}\r\n      {/* {isPending\r\n        ? '로딩중'\r\n        : a.map(() => {\r\n            return <div>{state1}</div>;\r\n          })}\r\n\r\n      <h6>\r\n        {state.user.name} {state.user.age}의 장바구니\r\n      </h6>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(changeAge(100));\r\n        }}\r\n      >\r\n        버튼\r\n      </button> */}\r\n      <button\r\n        onClick={() => {\r\n          dispatch(sort());\r\n        }}\r\n        style={{ position: 'absolute', top: '105px', right: '16px' }}\r\n      >\r\n        글자순정렬\r\n      </button>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>삭제하기</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.cart.map((data, i) => (\r\n            <tr key={i}>\r\n              <td>{data.id}</td>\r\n              <td>{data.name}</td>\r\n              <td>\r\n                <button\r\n                  style={{ marginRight: '10px' }}\r\n                  onClick={() => {\r\n                    dispatch(increase(data.id));\r\n                  }}\r\n                >\r\n                  +\r\n                </button>\r\n                {data.count}\r\n                <button\r\n                  style={{ marginLeft: '10px' }}\r\n                  onClick={() => {\r\n                    dispatch(decrease(data.id));\r\n                  }}\r\n                >\r\n                  -\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <p\r\n                  style={{ marginBottom: '0px' }}\r\n                  onClick={() => {\r\n                    window.confirm('삭제하시겠습니까?') &&\r\n                      dispatch(deleteCart(data.id));\r\n                  }}\r\n                >\r\n                  ❌\r\n                </p>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","Array","fill","Cart","state","useSelector","dispatch","useDispatch","useState","name","useTransition","useDeferredValue","onClick","sort","style","position","top","right","cart","map","data","i","id","marginRight","increase","count","marginLeft","decrease","marginBottom","window","confirm","deleteCart"],"sourceRoot":""}