{"version":3,"file":"static/js/892.e341983c.chunk.js","mappings":"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","sources":["pages/Detail.js"],"sourcesContent":["import { useParams, useNavigate } from 'react-router-dom';\r\nimport Empty from './Empty';\r\nimport styled from 'styled-components';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Context1 } from './../App.js';\r\nimport { addCart } from './../store/cartSlice.js';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nlet YellowBtn = styled.button`\r\n  background: ${(props) => props.bg};\r\n  color: ${(props) => (props.bg == 'blue' ? 'white' : 'black')};\r\n  padding: 10px;\r\n`;\r\n\r\nstyled.button(YellowBtn);\r\nlet Box = styled.div`\r\n  background: grey;\r\n  padding: 20px;\r\n`;\r\n\r\nexport default function Detail(props) {\r\n  let [alertBox, setAlertBox] = useState(false);\r\n  let [count, setCount] = useState(0);\r\n  let { id } = useParams();\r\n  let [alertMemo, setAlertMemo] = useState(false);\r\n  let [입력값, 입력값변경] = useState(0);\r\n  let [탭, 탭변경] = useState(0);\r\n  let [fade, setFade] = useState('');\r\n  let navigate = useNavigate();\r\n  let state = useSelector((state) => state);\r\n  let dispatch = useDispatch();\r\n\r\n  let { 재고, cocktail } = useContext(Context1);\r\n\r\n  useEffect(() => {\r\n    (Number(입력값) >= 0) & Number.isInteger(Number(입력값))\r\n      ? setAlertMemo(false)\r\n      : setAlertMemo(true);\r\n  }, [입력값]);\r\n\r\n  useEffect(() => {\r\n    let a = setTimeout(() => {\r\n      setFade('end');\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearTimeout(a);\r\n      setFade('');\r\n    };\r\n  }, []);\r\n  //  또다른방법 isNaN()\r\n\r\n  // useEffect(() => {\r\n  //   isNaN(입력값) == true && alert('그러지마세요');\r\n  // }, [입력값]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setAlertBox(true);\r\n    }, 2000);\r\n  }, []);\r\n\r\n  return id < props.cocktail.length ? (\r\n    <div className={`container start ${fade}`}>\r\n      {재고[0]}\r\n      {alertBox == false ? (\r\n        <div className='alert alert-warning'>2초 이내 구매시 할인</div>\r\n      ) : null}\r\n      <Box>\r\n        {count}\r\n        <YellowBtn\r\n          bg='blue'\r\n          onClick={() => {\r\n            setCount(count + 1);\r\n          }}\r\n        >\r\n          버튼\r\n        </YellowBtn>\r\n      </Box>\r\n      <div className='row'>\r\n        <div className='col-md-6' style={{ paddingTop: '20px' }}>\r\n          <img src={props.cocktail[id].link} width='60%' height='320vw' />\r\n        </div>\r\n        <div className='col-md-6'>\r\n          {alertMemo == true ? (\r\n            <div\r\n              style={{\r\n                backgroundColor: 'red',\r\n                height: '20%',\r\n                color: 'white',\r\n                fontSize: '30px',\r\n                padding: '20px',\r\n                boxSizing: 'border-box',\r\n              }}\r\n            >\r\n              경고:숫자만입력하세요\r\n            </div>\r\n          ) : null}\r\n          {/* <input\r\n            onChange={(e) => {\r\n              입력값변경(e.target.value);\r\n            }}\r\n          /> */}\r\n          <h4 className='pt-5'>{props.cocktail[id].title}</h4>\r\n          <p>{props.cocktail[id].content}</p>\r\n          <p>{props.cocktail[id].price}원</p>\r\n\r\n          <input\r\n            placeholder='숫자를 입력해주세요'\r\n            onChange={(e) => {\r\n              입력값변경(e.target.value);\r\n            }}\r\n            style={{ marginTop: '20px', textAlign: 'center' }}\r\n          ></input>\r\n\r\n          <button\r\n            onClick={() => {\r\n              if ((입력값 > 0) & Number.isInteger(Number(입력값))) {\r\n                dispatch(\r\n                  addCart({\r\n                    id: props.cocktail[id].id,\r\n                    name: props.cocktail[id].title,\r\n                    count: Number(입력값),\r\n                  })\r\n                );\r\n                navigate('/cart');\r\n              } else {\r\n                alert('수량을 입력해주세요');\r\n              }\r\n            }}\r\n            className='btn btn-danger'\r\n          >\r\n            주문하기\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <Nav\r\n        variant='tabs'\r\n        defaultActiveKey='/home' // 기본으로 눌려있을 버튼\r\n        style={{ paddingTop: '20px' }}\r\n      >\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              탭변경(0);\r\n            }}\r\n            eventKey='link0'\r\n          >\r\n            상세정보\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              탭변경(1);\r\n            }}\r\n            eventKey='link1'\r\n          >\r\n            리뷰\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            onClick={() => {\r\n              탭변경(2);\r\n            }}\r\n            eventKey='link2'\r\n          >\r\n            Q&A\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n      <TabContent 탭={탭} cocktail={props.cocktail} />\r\n    </div>\r\n  ) : (\r\n    <Empty />\r\n  );\r\n}\r\n\r\nfunction TabContent({ 탭, cocktail }) {\r\n  let [fade, setFade] = useState('');\r\n  let { 재고 } = useContext(Context1);\r\n\r\n  useEffect(() => {\r\n    let a = setTimeout(() => {\r\n      setFade('end');\r\n    }, 100);\r\n    return () => {\r\n      clearTimeout(a);\r\n      setFade('');\r\n    };\r\n  }, [탭]);\r\n\r\n  return (\r\n    <div className={`start ${fade}`}>\r\n      {[<div>{재고}</div>, <div>리뷰</div>, <div>Q&A</div>][탭]}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["YellowBtn","styled","props","bg","Box","Detail","useState","alertBox","setAlertBox","count","setCount","id","useParams","alertMemo","setAlertMemo","입력값","입력값변경","탭","탭변경","fade","setFade","navigate","useNavigate","dispatch","useSelector","state","useDispatch","useContext","Context1","재고","cocktail","useEffect","Number","isInteger","a","setTimeout","clearTimeout","length","className","onClick","style","paddingTop","src","link","width","height","backgroundColor","color","fontSize","padding","boxSizing","title","content","price","placeholder","onChange","e","target","value","marginTop","textAlign","addCart","name","alert","variant","defaultActiveKey","eventKey","TabContent"],"sourceRoot":""}